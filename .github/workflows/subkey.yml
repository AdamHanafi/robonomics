on: [push]

name: Subkey

jobs:
  native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Install LLVM (windows only)
      if: runner.os == 'Windows'
      run: choco install llvm
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: 'nightly-2020-02-02'
        targets: 'wasm32-unknown-unknown'
    - name: Checkout the source code
      uses: actions/checkout@master
    - name: Check targets are installed correctly
      run: rustup target list --installed
    - name: Install build tools
      run: cargo install --git https://github.com/alexcrichton/wasm-gc --force
    - name: Build optimized binary
      run: cargo build --release --verbose -p subkey

    - name: Upload binary archive into IPFS
      if: runner.os != 'Windows'
      run: |
        cd target/release
        tar cfJ subkey-${{ matrix.os }}-x86_64.tar.xz subkey
        curl "https://ipfs.infura.io:5001/api/v0/add" -F file=@subkey-${{ matrix.os }}-x86_64.tar.xz
    - uses: actions/upload-artifact@master
      if: runner.os != 'Windows'
      with:
        name: subkey-${{ matrix.os }}-x86_64.tar.xz
        path: target/release/subkey-${{ matrix.os }}-x86_64.tar.xz

    - name: Upload binary archive into IPFS (windows only)
      if: runner.os == 'Windows'
      run: |
        cd target/release
        tar czf subkey-${{ matrix.os }}-x86_64.tar.gz subkey.exe
        curl "https://ipfs.infura.io:5001/api/v0/add" -F file=@subkey-${{ matrix.os }}-x86_64.tar.gz
    - uses: actions/upload-artifact@master
      if: runner.os == 'Windows'
      with:
        name: subkey-${{ matrix.os }}-x86_64.tar.gz
        path: target/release/subkey-${{ matrix.os }}-x86_64.tar.gz
