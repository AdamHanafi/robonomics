[package]
name = "node-cli"
version = "0.16.4"
authors = ["Airalab <research@aira.life>"]
description = "Robonomics node implementation in Rust & Substrate."
build = "build.rs"
edition = "2018"
license = "Apache-2.0"
default-run = "robonomics"

[badges]
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "airalab/robonomics" }
is-it-maintained-open-issues = { repository = "airalab/robonomics" }

[[bin]]
name = "robonomics"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
futures = { version = "0.3" }
serde = { version = "1.0", features = ["derive"]}
codec = { package = "parity-scale-codec", version = "1.3" }
hex-literal = "0.2"
serde_json = "1.0"
log = "0.4"
structopt = { version = "0.3.8", optional = true }
jsonrpc-core = "13.2.0"

# primitives
node-primitives = { git = "https://github.com/paritytech/substrate", default-features = false }
sp-authority-discovery = { git = "https://github.com/paritytech/substrate" }
sp-consensus-babe = { git = "https://github.com/paritytech/substrate" }
sp-finality-grandpa = { git = "https://github.com/paritytech/substrate" }
sp-api = { git = "https://github.com/paritytech/substrate" }
sp-core = { git = "https://github.com/paritytech/substrate" }
sp-session = { git = "https://github.com/paritytech/substrate" }
sp-runtime = { git = "https://github.com/paritytech/substrate" }
sp-offchain = { git = "https://github.com/paritytech/substrate" }
sp-consensus = { git = "https://github.com/paritytech/substrate" }
sp-inherents = { git = "https://github.com/paritytech/substrate" }
sp-blockchain = { git = "https://github.com/paritytech/substrate" }
sp-block-builder = { git = "https://github.com/paritytech/substrate" }
sp-transaction-pool = { git = "https://github.com/paritytech/substrate" }

# client dependencies
sc-client = { git = "https://github.com/paritytech/substrate" }
sc-client-db = { git = "https://github.com/paritytech/substrate" }
sc-client-api = { git = "https://github.com/paritytech/substrate" }
sc-chain-spec = { git = "https://github.com/paritytech/substrate" }
sc-transaction-pool = { git = "https://github.com/paritytech/substrate" }
sc-network = { git = "https://github.com/paritytech/substrate" }
sc-offchain = { git = "https://github.com/paritytech/substrate" }
sc-consensus-babe = { git = "https://github.com/paritytech/substrate" }
sc-finality-grandpa = { git = "https://github.com/paritytech/substrate" }
sc-basic-authorship = { git = "https://github.com/paritytech/substrate" }
sc-authority-discovery = { git = "https://github.com/paritytech/substrate" }
sc-service = { git = "https://github.com/paritytech/substrate", default-features = false }
sc-telemetry = { git = "https://github.com/paritytech/substrate" }
sc-keystore = { git = "https://github.com/paritytech/substrate" }

# frame dependencies
pallet-im-online = { git = "https://github.com/paritytech/substrate" }
frame-benchmarking = { git = "https://github.com/paritytech/substrate", optional = true }
frame-system-rpc-runtime-api = { git = "https://github.com/paritytech/substrate" }
pallet-transaction-payment-rpc-runtime-api = { git = "https://github.com/paritytech/substrate" }

# node-specific dependencies
robonomics-runtime = { path = "../robonomics-runtime" }
ipci-runtime = { path = "../ipci-runtime" }
sc-executor = { git = "https://github.com/paritytech/substrate"  }
sc-rpc = { git = "https://github.com/paritytech/substrate" }

# CLI-specific dependencies
sc-cli = { git = "https://github.com/paritytech/substrate", optional = true }
frame-benchmarking-cli = { git = "https://github.com/paritytech/substrate", optional = true }

# Browser bundle build support
wasm-bindgen = { version = "0.2.57", optional = true }
wasm-bindgen-futures = { version = "0.4.7", optional = true }
browser-utils = { package = "substrate-browser-utils", git = "https://github.com/paritytech/substrate", optional = true }

# Robonomics-specific dependencies
rosrust = { version = "0.9.2", optional = true }
substrate-ros-api = { path = "../../../substrate-ros/api", optional = true }
robonomics-ros-api = { path = "../../../robonomics/ros-api", optional = true }
robonomics-protocol = { path = "../../../robonomics/protocol", optional = true }

[build-dependencies]
sc-cli = { git = "https://github.com/paritytech/substrate", optional = true }
frame-benchmarking-cli = { git = "https://github.com/paritytech/substrate", optional = true }
robonomics-protocol = { path = "../../../robonomics/protocol", optional = true }
substrate-build-script-utils = { git = "https://github.com/paritytech/substrate" }
vergen = { version = "3.0.4", optional = true }
structopt = { version = "0.3.8", optional = true }

[features]
default = ["wasmtime"]

## Enable Wasmtime virtual machine.
wasmtime = [
    "sc-service/wasmtime",
    "sc-cli/wasmtime",
    "cli",
]

## Enable Console Line Interface basic features.
cli = [
    "sc-cli",
    "vergen",
    "structopt",
    "sc-service/rocksdb",
    "robonomics-protocol",
]

## Enable browser bundle features.
browser = [
    "wasm-bindgen",
    "wasm-bindgen-futures",
    "browser-utils",
]

## Enable ROS integration: exports to ROS topics and services for Robonomics communication.
# To build with it install ROS (http://wiki.ros.org/melodic/Installation) before.
# It also require roscore service to be launched.
ros = [
    "rosrust",
    "substrate-ros-api",
    "robonomics-ros-api",
]

## Enable runtime benchmarking support.
runtime-benchmarks = [
    "robonomics-runtime/runtime-benchmarks",
    "ipci-runtime/runtime-benchmarks",
    "frame-benchmarking-cli",
    "frame-benchmarking",
]
